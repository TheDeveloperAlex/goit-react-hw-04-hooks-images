{"version":3,"sources":["Components/ImageGallery/ImageGallery.module.css","Components/Modal/Modal.module.css","Components/ImageGallery/ImageGalleryItem/ImageGalleryItem.module.css","Components/Button/Button.module.css","Components/Searchbar/Searchbar.module.css","Components/Searchbar/Searchbar.jsx","Components/Button/Button.jsx","Components/Modal/Modal.jsx","Components/ImageGallery/ImageGalleryItem/ImageGalleryItem.jsx","Components/ImageGallery/ImageGallery.jsx","utils/Api.js","Components/App.js","index.js"],"names":["module","exports","Searchbar","onSubmit","useState","name","setName","className","s","SearchForm","e","preventDefault","trim","document","getElementById","value","toast","error","type","SearchFormButton","SearchFormButtonLabel","SearchFormInput","onChange","target","toLowerCase","autoComplete","autoFocus","placeholder","id","Button","click","page","window","scrollTo","top","documentElement","scrollHeight","behavior","onClick","Modal","imgs","closeModal","imgModal","setImgModal","loading","handleEscape","code","useEffect","addEventListener","querySelector","style","overflow","find","item","toString","largeImageURL","removeEventListener","Overlay","currentTarget","color","height","width","timeout","src","alt","img","ImageGalleryItem","images","isModalOpen","setIsModalOpen","setId","onModalOpen","map","webformatURL","tag","ImageGalleryItemImage","ImageGallery","query","setImgs","setPage","isTarget","setIsTarget","setLoading","getImages","fetch","then","res","json","hits","getImagesApi","prev","finally","div","divLoader","length","App","ReactDOM","render"],"mappings":"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","file":"static/js/main.6e0b2d42.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"div\":\"ImageGallery_div__Qq8zB\",\"divLoader\":\"ImageGallery_divLoader__33i-N\",\"ImageGallery\":\"ImageGallery_ImageGallery__1Z6s7\",\"ImageGalleryItem\":\"ImageGallery_ImageGalleryItem__2SAXQ\",\"ImageGalleryItemImage\":\"ImageGallery_ImageGalleryItemImage__2Nq80\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__2xM35\",\"Modal\":\"Modal_Modal__2QP2_\",\"img\":\"Modal_img__2RJPO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__3w4OU\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__2a47H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__2gFrg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__3DWrS\",\"SearchForm\":\"Searchbar_SearchForm__1OdEu\",\"SearchFormButton\":\"Searchbar_SearchFormButton__1012f\",\"SearchFormButtonLabel\":\"Searchbar_SearchFormButtonLabel__2luQ7\",\"SearchFormInput\":\"Searchbar_SearchFormInput__3_O3t\"};","import React, { useState } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport s from \"./Searchbar.module.css\";\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function Searchbar({ onSubmit }) {\r\n  const [name, setName] = useState('');\r\n  \r\n\r\n\r\n  const onHandleChange = (e) => {\r\n    const value = e.target.value.toLowerCase();\r\n    setName(value);\r\n  };\r\n\r\n  const onHandleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (name.trim() === \"\") {\r\n      toast.error(\"Error, please enter text \");\r\n      return;\r\n    }\r\n    onSubmit(name);\r\n    document.getElementById(\"input\").value = \"\";\r\n    setName(\"\");\r\n  };\r\n\r\n  return (\r\n    <header className={s.Searchbar}>\r\n        <form className={s.SearchForm} onSubmit={onHandleSubmit}>\r\n          <button type=\"submit\" className={s.SearchFormButton}>\r\n            <span className={s.SearchFormButtonLabel}>Search</span>\r\n          </button>\r\n\r\n          <input\r\n            className={s.SearchFormInput}\r\n            type=\"text\"\r\n            onChange={onHandleChange}\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            id=\"input\"\r\n          />\r\n        </form>\r\n    </header>\r\n  )\r\n} ;\r\n\r\nSearchbar.propTypes = {\r\n  onSubmit: PropTypes.func,\r\n}","import s from './Button.module.css';\r\n\r\nconst Button = ({ click, page }) => {\r\n  page !== 2 && window.scrollTo({\r\n  top: document.documentElement.scrollHeight,\r\n  behavior: 'smooth',\r\n});\r\n    return (\r\n        <button type=\"button\" onClick={click} className={s.Button}>Load More</button>\r\n    );\r\n}\r\n\r\nexport default Button;","import React, { useState, useEffect } from \"react\";\r\nimport s from './Modal.module.css';\r\nimport Loader from \"react-loader-spinner\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Modal = ({ id, imgs, closeModal }) => {\r\n    const [imgModal, setImgModal] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    \r\n\r\n    const getImage = () => {\r\n        return imgs.find(item => (\r\n            item.id.toString() === id.toString()\r\n        ))    \r\n    }\r\n\r\n    const handleEscape = (e) => e.code === \"Escape\" && closeModal();\r\n\r\n    const onOverlayClick = ({ target, currentTarget }) => {\r\n        target === currentTarget &&\r\n           closeModal();\r\n    };\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"keydown\", handleEscape);\r\n        const body = document.querySelector(\"body\");\r\n        body.style.overflow = \"hidden\";\r\n    \r\n        setImgModal(getImage().largeImageURL);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n       \r\n        return () => {\r\n            window.removeEventListener(\"keydown\", handleEscape);\r\n            const body = document.querySelector(\"body\");\r\n            body.style.overflow = \"auto\";\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <div className={s.Overlay} onClick={onOverlayClick}>\r\n                <div className={s.Modal} id=\"Modal\">\r\n                    {loading && <Loader\r\n                        type=\"Circles\"\r\n                        color=\"#00BFFF\"\r\n                        height={100}\r\n                        width={100}\r\n                        timeout={3000} //3 secs\r\n                    /> }\r\n                    <img src={imgModal} alt=\"\" className={s.img} />\r\n                </div>\r\n            </div>\r\n        </>    \r\n    );\r\n}\r\n\r\nexport default Modal;\r\n\r\nModal.propTypes = {\r\n    id: PropTypes.string,\r\n    imgs: PropTypes.array,\r\n    closeModal: PropTypes.func,\r\n}\r\n\r\n\r\n    \r\n\r\n    \r\n\r\n","import s from './ImageGalleryItem.module.css';\r\nimport React, { useState } from 'react'\r\nimport Modal from \"../../Modal/Modal\";\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst ImageGalleryItem = ({ images }) => {\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [id, setId] = useState('');\r\n\r\n  const onModalOpen = (e) => {\r\n    setId( e.target.id );\r\n    setIsModalOpen(true);\r\n  };\r\n  \r\n  const closeModal = () => setIsModalOpen( false);\r\n\r\n\r\n  return (\r\n      <>\r\n        {\r\n              images.map((item) => (\r\n                <li className={s.ImageGalleryItem} key={item.id}>\r\n                  <img\r\n                    onClick={onModalOpen}\r\n                    src={item.webformatURL}\r\n                    id={item.id}\r\n                    alt={item.tag }\r\n                    className={s.ImageGalleryItemImage}     \r\n                  />  \r\n                </li>    \r\n              ))              \r\n        }\r\n      \r\n            {isModalOpen && <Modal closeModal={closeModal} id={id} imgs={images} /> }\r\n        </> \r\n  );\r\n}\r\n\r\nexport default ImageGalleryItem;\r\n\r\nImageGalleryItem.propTypes = {\r\n  images: PropTypes.array,\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport Button from \"../Button/Button\";\r\nimport s from \"./ImageGallery.module.css\";\r\nimport { getImagesApi } from \"../../utils/Api\";\r\nimport ImageGalleryItem from \"./ImageGalleryItem/ImageGalleryItem\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst ImageGallery = ({ query }) => {\r\n  const [imgs, setImgs] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n  const [isTarget, setIsTarget] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n\r\nconst getImages = ( query, page ) => {\r\n    setLoading( true );\r\n    \r\n    getImagesApi( query, page )\r\n      .then((images) =>\r\n        setImgs((prev) => (\r\n          [...prev, ...images]\r\n        ))\r\n      )\r\n      .finally(() => setLoading( false ));\r\n  };\r\n\r\nconst onHandelClick = () => {\r\n    setIsTarget( true );\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (query) {\r\n    getImages(query, 1);\r\n    setPage(2);\r\n    setImgs([]);\r\n    }\r\n    \r\n  }, [query]);\r\n\r\n  useEffect(() => {\r\n    if (isTarget) {\r\n      setPage((prev) => (\r\n         prev + 1\r\n      ));\r\n      getImages( query, page );\r\n      setIsTarget( false );\r\n    }\r\n    \r\n  }, [isTarget])\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n        <div className={s.div}>\r\n          <ul className={s.ImageGallery}>\r\n            <ImageGalleryItem images={imgs} />\r\n          </ul>\r\n          <div className={s.divLoader}>\r\n              {loading && (\r\n            <Loader\r\n              type=\"Circles\"\r\n              color=\"#00BFFF\"\r\n              height={150}\r\n              width={150}\r\n              timeout={3000} //3 secs\r\n            />\r\n          )}\r\n          </div>\r\n          \r\n          {imgs.length > 0 && (\r\n            <Button click={onHandelClick} page={page} />\r\n          )}\r\n        </div>\r\n      </>\r\n  );\r\n}\r\n\r\nexport default ImageGallery;\r\n\r\nImageGallery.propTypes = {\r\n  query: PropTypes.string,\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","const KEY = \"22768638-b34a0dc747ee3cff056840f2a\";\r\n\r\nexport const getImagesApi = (query, page) => {\r\n  return fetch(\r\n    `https://pixabay.com/api/?q=${query}&page=${page}&key=${KEY}&image_type=photo&orientation=horizontal&per_page=12`\r\n  )\r\n    .then((res) => res.json())\r\n    .then((res) => res.hits)\r\n    .then((res) => {\r\n      return res;\r\n    });\r\n};\r\n","import React, { useState } from \"react\";\r\nimport Searchbar from \"./Searchbar/Searchbar\";\r\nimport ImageGallery from \"./ImageGallery/ImageGallery\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nexport default function App() {\r\n  const [name, setName] = useState(\"\");\r\n\r\n  const onSubmit = (query) => {\r\n    setName(query);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Searchbar onSubmit={onSubmit} />\r\n      <ToastContainer />\r\n      <ImageGallery query={name} />\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./Components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}